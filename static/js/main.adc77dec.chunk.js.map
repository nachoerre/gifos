{"version":3,"sources":["components/button/Button.jsx","utils/request.js","contexts/AppContext.js","assets/logo-mobile-modo-noct.svg","assets/logo-desktop.svg","components/header/Header.jsx","assets/ilustra_header.svg","assets/icon-search-mod-noc.svg","assets/icon-search.svg","components/search/Search.jsx","components/gif/Gif.jsx","components/results/Results.jsx","app/App.jsx","index.js"],"names":["Button","className","children","onClick","disabled","type","id","request","resource","query","limit","fetch","AppContext","createContext","AppProvider","useState","isDark","setIsDark","inputValue","setInputValue","gifsList","setGifsList","isSearching","setIsSearching","initialMessage","setInitialMessage","useEffect","then","res","json","data","catch","err","console","log","finally","Provider","value","Header","useContext","src","darkLogo","alt","lightLogo","Search","autoComplete","setAutoComplete","ilustraHeader","onChange","e","target","placeholder","iconSearchMod","length","map","item","name","iconSearch","Gif","href","rel","Results","url","images","fixed_height","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.adc77dec.chunk.js","sourcesContent":["//styles\r\nimport './Button.css'\r\n\r\n//dependecies\r\nimport React from 'react';\r\n\r\nfunction Button({\r\n  className,\r\n  children,\r\n  onClick,\r\n  disabled\r\n}) {\r\n  return (\r\n    <button\r\n      type='button'\r\n      className={`btn ${className ? `${className}` : ''}`}\r\n      onClick={onClick}\r\n      disabled={disabled}\r\n      id='btn'\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Button;","export const request = (resource='/trending', query, limit=15) => fetch(`https://api.giphy.com/v1/gifs${resource}?api_key=9Hsckhr7phcawHHQqWlIstSlmTHVFoLI&q=${query}&limit=${limit}&offset=0&rating=g&lang=en`);","//dependencies\r\nimport { createContext, useEffect, useState } from \"react\";\r\n\r\n//utils\r\nimport { request } from '../utils/request';\r\n\r\nexport const AppContext = createContext();\r\n\r\nexport default function AppProvider({children}) {\r\n  const [isDark, setIsDark] = useState(false);\r\n  const [inputValue, setInputValue] = useState('');\r\n  const [gifsList, setGifsList] = useState([]);\r\n  const [isSearching, setIsSearching] = useState(false)\r\n  const [initialMessage, setInitialMessage] = useState(false)\r\n\r\n//initially we show the trending Gifs\r\n  useEffect(() => {\r\n      request('/trending')\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          setGifsList(data.data)\r\n        })\r\n        .catch(err => console.log(err))\r\n  }, [])\r\n\r\n  //it search the Gifs that matches with the text written on the input\r\n  useEffect(() => {\r\n    if (isSearching) {\r\n      request('/search', inputValue)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          setGifsList(data.data)\r\n        })\r\n        .catch(err => console.log(err))\r\n        .finally(() => { setIsSearching(false); setInputValue(''); setInitialMessage(true) })\r\n    }\r\n  }, [isSearching, inputValue])\r\n\r\n  return (\r\n    <AppContext.Provider value={{\r\n      isDark, \r\n      setIsDark, \r\n      inputValue, \r\n      setInputValue,\r\n      gifsList,\r\n      isSearching, \r\n      setIsSearching,\r\n      initialMessage, \r\n      setInitialMessage\r\n      }}>\r\n      {children}\r\n    </AppContext.Provider>\r\n  )\r\n}","export default __webpack_public_path__ + \"static/media/logo-mobile-modo-noct.47e214b1.svg\";","export default __webpack_public_path__ + \"static/media/logo-desktop.2f122678.svg\";","//styles\r\nimport './Header.css'\r\n\r\n//components\r\nimport Button from '../button/Button'\r\n\r\n//context\r\nimport { AppContext } from '../../contexts/AppContext';\r\n\r\n//dependencies\r\nimport React, { useContext } from 'react';\r\n\r\n//assets\r\nimport darkLogo from '../../assets/logo-mobile-modo-noct.svg';\r\nimport lightLogo from '../../assets/logo-desktop.svg';\r\n\r\nfunction Header() {\r\n  const { isDark, setIsDark } = useContext(AppContext);\r\n\r\n  return (\r\n    <header className='header'>\r\n      <div>\r\n        {isDark ?\r\n          <img src={darkLogo} alt=\"Logo de Gifos\" className='logo' /> :\r\n          <img src={lightLogo} alt=\"Logo de Gifos\" className='logo' />\r\n        }\r\n      </div>\r\n      <Button className={isDark ? 'dark' : 'light'} onClick={() => setIsDark(!isDark)}>\r\n        MODO {isDark ? ' LIGHT' : ' DARK'}\r\n      </Button>\r\n    </header>\r\n\r\n  )\r\n}\r\n\r\nexport default Header;\r\n\r\n","export default __webpack_public_path__ + \"static/media/ilustra_header.9d4669b1.svg\";","export default __webpack_public_path__ + \"static/media/icon-search-mod-noc.ecc2b197.svg\";","export default __webpack_public_path__ + \"static/media/icon-search.657bf939.svg\";","//styles\r\nimport './Search.css';\r\n\r\n//components\r\nimport Button from \"../button/Button\";\r\n\r\n//dependencies\r\nimport React, { useState, useEffect, useContext } from 'react';\r\n\r\n//utils\r\nimport { request } from '../../utils/request';\r\n\r\n//contexts\r\nimport { AppContext } from '../../contexts/AppContext';\r\n\r\n//assets\r\nimport ilustraHeader from '../../assets/ilustra_header.svg'\r\nimport iconSearchMod from '../../assets/icon-search-mod-noc.svg'\r\nimport iconSearch from '../../assets/icon-search.svg'\r\n\r\nfunction Search() {\r\n  const { inputValue, setInputValue } = useContext(AppContext);\r\n  const { isSearching, setIsSearching } = useContext(AppContext);\r\n\r\n  const [autoComplete, setAutoComplete] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (inputValue !== '') {\r\n      request('/search/tags', inputValue, 5) //The route was taken from https://developers.giphy.com/docs/api/endpoint#autocomplete\r\n        .then(res => res.json())\r\n        .then(data => setAutoComplete(data.data))\r\n        .catch(err => console.log(err))\r\n    }\r\n  }, [inputValue])\r\n\r\n  return (\r\n    <section className='search-section'>\r\n      <h1 className='title'>Â¡Inspirate y busca los mejores <span>GIFS</span>!</h1>\r\n      <img className='ilustra-header' src={ilustraHeader} alt=\"Ilustracion del encabezado\" />\r\n      <form className='search'>\r\n        <div className='search-container'>\r\n          <input\r\n            className='input-search'\r\n            type=\"text\"\r\n            value={inputValue}\r\n            onChange={(e) => setInputValue(e.target.value)}\r\n            placeholder='Buscar Gif'\r\n          />\r\n          <Button\r\n            onClick={() => setIsSearching(!isSearching)}\r\n            className='btn-search'\r\n            disabled={isSearching || inputValue === ''}\r\n          >\r\n            <img src={iconSearchMod} alt=\"Lupa de busqueda\" />\r\n          </Button>\r\n        </div>\r\n        <div className={`browsers ${inputValue === '' || !autoComplete.length ? 'not-show' : 'show'}`}>\r\n          {(autoComplete || []).map(item => {\r\n            return (\r\n              <Button\r\n                key={item.name}\r\n                onClick={() => {\r\n                  setIsSearching(!isSearching)\r\n                  setInputValue(item.name)\r\n                }}\r\n                className='btn-autocomplete'\r\n                disabled={isSearching || inputValue === ''}\r\n              >\r\n                <div className='data-list'>\r\n                  <img src={iconSearch} alt=\"Lupa de busqueda\" />\r\n                  <option>{item.name}</option>\r\n                </div>\r\n              </Button>\r\n            );\r\n          })}\r\n        </div>\r\n      </form>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Search;","//styles\r\nimport './Gif.css'\r\n\r\n//dependencies\r\nimport React from \"react\";\r\n\r\nfunction Gif({\r\n  src\r\n}) {\r\n  return (\r\n    <div>\r\n      {/* clicking the Gif you can access to the Gif original website at Giphy platform */}\r\n      <a href={src} target='_blank' rel='noreferrer noopener'>\r\n        <img className='gif-img' src={src} alt='gif'></img>\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Gif;","//styles\r\nimport './Results.css'\r\n\r\n//components\r\nimport Gif from \"../gif/Gif\";\r\n\r\n//dependencies\r\nimport React, { useContext } from \"react\";\r\n\r\n//contexts\r\nimport { AppContext } from \"../../contexts/AppContext\";\r\n\r\nfunction Results() {\r\n  const { gifsList } = useContext(AppContext);\r\n  const { initialMessage } = useContext(AppContext);\r\n\r\n  return (\r\n    <div className='results'>\r\n      {!gifsList.length ?\r\n        <p>No se encontraron resultados :(</p> :\r\n        <section>\r\n          {!initialMessage ?\r\n            <p>Realiza tu bÃºsqueda!</p> :\r\n            <p>Resultados de la bÃºsqueda</p>\r\n          }\r\n          <div className='gif-container'>\r\n            {(gifsList || []).map(item => {\r\n              const { id, images: {\r\n                fixed_height: {\r\n                  url }\r\n              } } = item; \r\n              return (\r\n                <Gif key={id} src={url} />\r\n              )\r\n            })}\r\n          </div>\r\n        </section>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Results;","//styles\nimport './App.css';\n\n//components\nimport Header from '../components/header/Header';\nimport Search from '../components/search/Search';\nimport Results from '../components/results/Results';\n\n//contexts\nimport { AppContext } from '../contexts/AppContext';\n\n//dependencies\nimport React, { useContext } from 'react';\n\n\nfunction App() {\n  const { isDark } = useContext(AppContext);\n  const { isSearching } = useContext(AppContext);\n\n  return (\n    <div className={`app ${isDark ? 'dark' : 'light'}`}>\n      <hr />\n      <div className='container'>\n        <Header />\n        <Search />\n        {isSearching ? <span className='lds-dual-ring'></span> :\n          <Results />\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport AppProvider from './contexts/AppContext';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <App />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}